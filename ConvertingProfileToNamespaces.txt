Refactoring a Module for Namespaces
Core 1.3 -> Core 1.4 compatibility

OVERVIEW
Read all of these notes before beginning. Especially the final points about the upgrade process. 


NOTES: Someone had already partially converted Dizkus, so the templates and other assets had been moved to /Resources
and the controller actions had already been suffixed with 'Action'


STEP ONE:
run module:restructure from inside the module directory
cd src/modules/Profile
php ../../../../Tools.git/zikula-tools module:restructure --vendor=Zikula --module-name=ProfileModule --dir=. --force

notes: 
1. is —module-name and not —module also name should include 'Module' like 'ProfileModule' not just 'Profile'
2. auto-commits via git


STEP TWO:
run module:ns from inside the module directory
php ../../../../Tools.git/zikula-tools module:ns --dir=. --vendor=Zikula --module-name=ProfileModule

notes: 
1. use —module-name also - use “ProfileModule” not “Profile”
2. not auto committed


STEP THREE
run module:controller_actions from inside the module directory
php ../../../../Tools.git/zikula-tools module:controller_actions --dir=./Controller --force


CLEAN UP STEPS (manual work):
1. look for instances where the import (use) statements have been placed above the namespace and move below
2. look for root level classnames (e.g. Profile_Constant) and convert them to slash-names
3. look for and refactor Helper or Listener classnames and convert to slash-names
4. look for legacy Zikula classes (e.g. Zikula_Event) and place forward-slash before (e.g. \Zikula_Event) or add imports.
5. convert string versions of classnames (in quotes like 'Profile_Entity_Property') to slash-names
    ('Zikula\Module\ProfileModule\Entity\PropertyEntity')
6. you can now use shortcut entity names: `'ZikulaProfileModule:PropertyEntity'` instead of
    `'Zikula\Module\ProfileModule\Entity\PropertyEntity'` when used as a string in entityManager searches (but **not** in
    the SchemaTool (e.g. `DoctrineHelper::createSchema()`)
7. reformat arrays and class method chains
8. correct use of module name throughout: 'Profile' to 'ZikulaProfileModule'
  - recommend using `$this->name` in php files that extend from Zikula_AbstractBase and `$module` in templates.
  - in other places, consider using a constant instead
  - convert modvar keys (from $modvars.Profile.foo to $modvars.$module.foo)
  - convert name usage in permission checks
9. consider places in the DB that might be storing the original module name and write upgrade routine to compensate
10. consider permissions module DB changes
11. add old module name ('Profile') to 'oldnames' array in Version
12. add core_min value of '1.4.0' to your Version file.
13. write appropriate upgrade routines and bump your version number

possible problems:
 - There may be issues with persistent events being called on the old classname.
 - For the moment, you may need to uninstall the module completely before making any of these conversions and then reinstall
   once everything is done.